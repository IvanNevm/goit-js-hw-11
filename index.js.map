{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '49622703-1639e63074f827bd1b79f059d';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function getImagesByQuery(query) {\n  try {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    throw error;\n  }\n}","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst galleryContainer = document.querySelector('.gallery');\nlet lightbox = new SimpleLightbox('.gallery a');\n\nexport function createGallery(images) {\n  const markup = images\n    .map(\n      ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n      <a href=\"${largeImageURL}\" class=\"gallery-item\">\n        <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n        <div class=\"info\">\n          <p> Likes: <span class=\"info-value\">${likes}</span></p>\n          <p> Views: <span class=\"info-value\">${views}</span></p>\n          <p> Comments: <span class=\"info-value\">${comments}</span></p>\n          <p> Downloads: <span class=\"info-value\">${downloads}</span></p>\n        </div>\n      </a>\n    `\n    )\n    .join('');\n  galleryContainer.innerHTML = markup;\n  lightbox.refresh();\n}\n\n\nexport function clearGallery() {\n  galleryContainer.innerHTML = '';\n}\n\nexport function showLoader() {\n  document.querySelector('.loader').classList.add('visible');\n}\n\nexport function hideLoader() {\n  document.querySelector('.loader').classList.remove('visible');\n}\nfunction showLoadingMessage() {\n  const loadingMessage = document.querySelector('.loader');\n  loadingMessage.style.display = 'block';\n}\n\nfunction hideLoadingMessage() {\n  const loadingMessage = document.querySelector('.loader');\n  loadingMessage.style.display = 'none';\n}","import { getImagesByQuery } from './js/pixabay-api.js';\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n} from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst searchInput = document.querySelector('input[name=\"search-text\"]');\nconst loadingMessage = document.querySelector('.loading-message'); // Елемент для повідомлення\n\nfunction showLoadingMessage() {\n  loadingMessage.style.display = 'block'; // Показати повідомлення\n}\n\nfunction hideLoadingMessage() {\n  loadingMessage.style.display = 'none'; // Приховати повідомлення\n}\n\nform.addEventListener('submit', async (event) => {\n  event.preventDefault();\n  const query = searchInput.value.trim();\n\n  if (!query) {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Search field cannot be empty!',\n    });\n    return;\n  }\n\n  clearGallery();\n  showLoader();\n  showLoadingMessage(); // Показати \"Loading, please wait\"\n\n  try {\n    const data = await getImagesByQuery(query);\n    if (data.hits.length === 0) {\n      iziToast.info({\n        title: 'No Results',\n        message: 'Sorry, there are no images matching your search query. Please try again!',\n      });\n    } else {\n      createGallery(data.hits);\n    }\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Something went wrong. Please try again later!',\n    });\n  } finally {\n    hideLoader();\n    hideLoadingMessage(); // Приховати \"Loading, please wait\"\n  }\n});"],"names":["API_KEY","BASE_URL","getImagesByQuery","query","axios","error","galleryContainer","lightbox","SimpleLightbox","createGallery","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","form","searchInput","loadingMessage","showLoadingMessage","hideLoadingMessage","event","iziToast","data"],"mappings":"+vBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAiBC,EAAO,CAC5C,GAAI,CAUF,OATiB,MAAMC,EAAM,IAAIH,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,GACe,IACjB,OAAQE,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACV,CACA,CClBA,MAAMC,EAAmB,SAAS,cAAc,UAAU,EAC1D,IAAIC,EAAW,IAAIC,EAAe,YAAY,EAEvC,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAASD,EACZ,IACC,CAAC,CAAE,aAAAE,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,KAAgB;AAAA,iBACnEL,CAAa;AAAA,oBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA,gDAEEC,CAAK;AAAA,gDACLC,CAAK;AAAA,mDACFC,CAAQ;AAAA,oDACPC,CAAS;AAAA;AAAA;AAAA,KAI7D,EACK,KAAK,EAAE,EACVZ,EAAiB,UAAYK,EAC7BJ,EAAS,QAAS,CACpB,CAGO,SAASY,GAAe,CAC7Bb,EAAiB,UAAY,EAC/B,CAEO,SAASc,GAAa,CAC3B,SAAS,cAAc,SAAS,EAAE,UAAU,IAAI,SAAS,CAC3D,CAEO,SAASC,GAAa,CAC3B,SAAS,cAAc,SAAS,EAAE,UAAU,OAAO,SAAS,CAC9D,CC3BA,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAc,SAAS,cAAc,2BAA2B,EAChEC,EAAiB,SAAS,cAAc,kBAAkB,EAEhE,SAASC,GAAqB,CAC5BD,EAAe,MAAM,QAAU,OACjC,CAEA,SAASE,GAAqB,CAC5BF,EAAe,MAAM,QAAU,MACjC,CAEAF,EAAK,iBAAiB,SAAU,MAAOK,GAAU,CAC/CA,EAAM,eAAgB,EACtB,MAAMxB,EAAQoB,EAAY,MAAM,KAAM,EAEtC,GAAI,CAACpB,EAAO,CACVyB,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,+BACf,CAAK,EACD,MACJ,CAEET,EAAc,EACdC,EAAY,EACZK,IAEA,GAAI,CACF,MAAMI,EAAO,MAAM3B,EAAiBC,CAAK,EACrC0B,EAAK,KAAK,SAAW,EACvBD,EAAS,KAAK,CACZ,MAAO,aACP,QAAS,0EACjB,CAAO,EAEDnB,EAAcoB,EAAK,IAAI,CAE1B,MAAe,CACdD,EAAS,MAAM,CACb,MAAO,QACP,QAAS,+CACf,CAAK,CACL,QAAY,CACRP,EAAY,EACZK,GACJ,CACA,CAAC"}